[INFO][2017-06-16 16:21:38,331][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7bb11784: startup date [Fri Jun 16 16:21:38 CST 2017]; root of context hierarchy
[INFO][2017-06-16 16:21:38,386][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring.xml]
[INFO][2017-06-16 16:21:38,878][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring-hibernate.xml]
[INFO][2017-06-16 16:21:39,097][com.web.soulyogaadmin.util.EncryptablePropertyPlaceholderConfigurer]Loading properties file from class path resource [config.properties]
[INFO][2017-06-16 16:21:39,561][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6e20b53a: defining beans [operationDao,operationService,courseDao,courseService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,propertyConfigurer,dataSource,sessionFactory,transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
[INFO][2017-06-16 16:21:39,606][com.mchange.v2.log.MLog]MLog clients using log4j logging.
[INFO][2017-06-16 16:21:39,849][com.mchange.v2.c3p0.C3P0Registry]Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[DEBUG][2017-06-16 16:21:40,151][org.hibernate.type.BasicTypeRegistry]Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,151][org.hibernate.type.BasicTypeRegistry]Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,152][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,153][org.hibernate.type.BasicTypeRegistry]Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a307a8c
[DEBUG][2017-06-16 16:21:40,155][org.hibernate.type.BasicTypeRegistry]Adding type registration true_false -> org.hibernate.type.TrueFalseType@389c4eb1
[DEBUG][2017-06-16 16:21:40,155][org.hibernate.type.BasicTypeRegistry]Adding type registration yes_no -> org.hibernate.type.YesNoType@4b34fff9
[DEBUG][2017-06-16 16:21:40,157][org.hibernate.type.BasicTypeRegistry]Adding type registration byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,157][org.hibernate.type.BasicTypeRegistry]Adding type registration byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,157][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,159][org.hibernate.type.BasicTypeRegistry]Adding type registration character -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,159][org.hibernate.type.BasicTypeRegistry]Adding type registration char -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,159][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,161][org.hibernate.type.BasicTypeRegistry]Adding type registration short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,162][org.hibernate.type.BasicTypeRegistry]Adding type registration short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,162][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,163][org.hibernate.type.BasicTypeRegistry]Adding type registration integer -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,163][org.hibernate.type.BasicTypeRegistry]Adding type registration int -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,163][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,165][org.hibernate.type.BasicTypeRegistry]Adding type registration long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,165][org.hibernate.type.BasicTypeRegistry]Adding type registration long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,165][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,167][org.hibernate.type.BasicTypeRegistry]Adding type registration float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,167][org.hibernate.type.BasicTypeRegistry]Adding type registration float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,168][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,169][org.hibernate.type.BasicTypeRegistry]Adding type registration double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,170][org.hibernate.type.BasicTypeRegistry]Adding type registration double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,170][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,172][org.hibernate.type.BasicTypeRegistry]Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27adc16e
[DEBUG][2017-06-16 16:21:40,172][org.hibernate.type.BasicTypeRegistry]Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27adc16e
[DEBUG][2017-06-16 16:21:40,173][org.hibernate.type.BasicTypeRegistry]Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4066c471
[DEBUG][2017-06-16 16:21:40,173][org.hibernate.type.BasicTypeRegistry]Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4066c471
[DEBUG][2017-06-16 16:21:40,174][org.hibernate.type.BasicTypeRegistry]Adding type registration string -> org.hibernate.type.StringType@7d3d101b
[DEBUG][2017-06-16 16:21:40,174][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.String -> org.hibernate.type.StringType@7d3d101b
[DEBUG][2017-06-16 16:21:40,176][org.hibernate.type.BasicTypeRegistry]Adding type registration url -> org.hibernate.type.UrlType@1f75a668
[DEBUG][2017-06-16 16:21:40,176][org.hibernate.type.BasicTypeRegistry]Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f75a668
[DEBUG][2017-06-16 16:21:40,177][org.hibernate.type.BasicTypeRegistry]Adding type registration date -> org.hibernate.type.DateType@27d5a580
[DEBUG][2017-06-16 16:21:40,178][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Date -> org.hibernate.type.DateType@27d5a580
[DEBUG][2017-06-16 16:21:40,180][org.hibernate.type.BasicTypeRegistry]Adding type registration time -> org.hibernate.type.TimeType@19e7a160
[DEBUG][2017-06-16 16:21:40,180][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19e7a160
[DEBUG][2017-06-16 16:21:40,182][org.hibernate.type.BasicTypeRegistry]Adding type registration timestamp -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,182][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,182][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,184][org.hibernate.type.BasicTypeRegistry]Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e6f3f28
[DEBUG][2017-06-16 16:21:40,186][org.hibernate.type.BasicTypeRegistry]Adding type registration calendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,186][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,186][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,187][org.hibernate.type.BasicTypeRegistry]Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eaf3684
[DEBUG][2017-06-16 16:21:40,188][org.hibernate.type.BasicTypeRegistry]Adding type registration locale -> org.hibernate.type.LocaleType@39d9314d
[DEBUG][2017-06-16 16:21:40,189][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39d9314d
[DEBUG][2017-06-16 16:21:40,189][org.hibernate.type.BasicTypeRegistry]Adding type registration currency -> org.hibernate.type.CurrencyType@1bae316d
[DEBUG][2017-06-16 16:21:40,190][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1bae316d
[DEBUG][2017-06-16 16:21:40,191][org.hibernate.type.BasicTypeRegistry]Adding type registration timezone -> org.hibernate.type.TimeZoneType@5026735c
[DEBUG][2017-06-16 16:21:40,191][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5026735c
[DEBUG][2017-06-16 16:21:40,192][org.hibernate.type.BasicTypeRegistry]Adding type registration class -> org.hibernate.type.ClassType@50dfbc58
[DEBUG][2017-06-16 16:21:40,192][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50dfbc58
[DEBUG][2017-06-16 16:21:40,194][org.hibernate.type.BasicTypeRegistry]Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e36d14
[DEBUG][2017-06-16 16:21:40,194][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e36d14
[DEBUG][2017-06-16 16:21:40,195][org.hibernate.type.BasicTypeRegistry]Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302f7971
[DEBUG][2017-06-16 16:21:40,196][org.hibernate.type.BasicTypeRegistry]Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3370f42
[DEBUG][2017-06-16 16:21:40,198][org.hibernate.type.BasicTypeRegistry]Adding type registration binary -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,198][org.hibernate.type.BasicTypeRegistry]Adding type registration byte[] -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,198][org.hibernate.type.BasicTypeRegistry]Adding type registration [B -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,199][org.hibernate.type.BasicTypeRegistry]Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,199][org.hibernate.type.BasicTypeRegistry]Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,199][org.hibernate.type.BasicTypeRegistry]Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,200][org.hibernate.type.BasicTypeRegistry]Adding type registration image -> org.hibernate.type.ImageType@176b75f7
[DEBUG][2017-06-16 16:21:40,201][org.hibernate.type.BasicTypeRegistry]Adding type registration characters -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,202][org.hibernate.type.BasicTypeRegistry]Adding type registration char[] -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,202][org.hibernate.type.BasicTypeRegistry]Adding type registration [C -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,204][org.hibernate.type.BasicTypeRegistry]Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,204][org.hibernate.type.BasicTypeRegistry]Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,204][org.hibernate.type.BasicTypeRegistry]Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,205][org.hibernate.type.BasicTypeRegistry]Adding type registration text -> org.hibernate.type.TextType@7fcf2fc1
[DEBUG][2017-06-16 16:21:40,211][org.hibernate.type.BasicTypeRegistry]Adding type registration blob -> org.hibernate.type.BlobType@609db546
[DEBUG][2017-06-16 16:21:40,211][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@609db546
[DEBUG][2017-06-16 16:21:40,212][org.hibernate.type.BasicTypeRegistry]Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@301eda63
[DEBUG][2017-06-16 16:21:40,216][org.hibernate.type.BasicTypeRegistry]Adding type registration clob -> org.hibernate.type.ClobType@3af0a9da
[DEBUG][2017-06-16 16:21:40,216][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3af0a9da
[DEBUG][2017-06-16 16:21:40,217][org.hibernate.type.BasicTypeRegistry]Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8e50104
[DEBUG][2017-06-16 16:21:40,219][org.hibernate.type.BasicTypeRegistry]Adding type registration serializable -> org.hibernate.type.SerializableType@45a37759
[DEBUG][2017-06-16 16:21:40,222][org.hibernate.type.BasicTypeRegistry]Adding type registration object -> org.hibernate.type.ObjectType@60410cd
[DEBUG][2017-06-16 16:21:40,222][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60410cd
[DEBUG][2017-06-16 16:21:40,223][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38604b81
[DEBUG][2017-06-16 16:21:40,223][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e44b638
[DEBUG][2017-06-16 16:21:40,223][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7393222f
[DEBUG][2017-06-16 16:21:40,224][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@babafc2
[DEBUG][2017-06-16 16:21:40,224][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31add175
[DEBUG][2017-06-16 16:21:40,224][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ae3540e
[DEBUG][2017-06-16 16:21:40,224][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@600b9d27
[DEBUG][2017-06-16 16:21:40,224][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3688eb5b
[INFO][2017-06-16 16:21:40,243][org.hibernate.annotations.common.Version]HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
[INFO][2017-06-16 16:21:40,251][org.hibernate.Version]HHH000412: Hibernate Core {4.1.7.Final}
[INFO][2017-06-16 16:21:40,255][org.hibernate.cfg.Environment]HHH000206: hibernate.properties not found
[INFO][2017-06-16 16:21:40,257][org.hibernate.cfg.Environment]HHH000021: Bytecode provider name : javassist
[INFO][2017-06-16 16:21:40,282][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Administrator.hbm.xml
[INFO][2017-06-16 16:21:40,393][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\AgenceList.hbm.xml
[INFO][2017-06-16 16:21:40,416][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\ClaimStatus.hbm.xml
[INFO][2017-06-16 16:21:40,434][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Client.hbm.xml
[INFO][2017-06-16 16:21:40,451][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Course.hbm.xml
[INFO][2017-06-16 16:21:40,464][org.springframework.beans.factory.support.DefaultListableBeanFactory]Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6e20b53a: defining beans [operationDao,operationService,courseDao,courseService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,propertyConfigurer,dataSource,sessionFactory,transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
[INFO][2017-06-16 16:21:40,515][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4b3ed2f0: startup date [Fri Jun 16 16:21:40 CST 2017]; root of context hierarchy
[INFO][2017-06-16 16:21:40,519][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring.xml]
[INFO][2017-06-16 16:21:40,587][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring-hibernate.xml]
[INFO][2017-06-16 16:21:40,629][com.web.soulyogaadmin.util.EncryptablePropertyPlaceholderConfigurer]Loading properties file from class path resource [config.properties]
[INFO][2017-06-16 16:21:40,636][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ff4357f: defining beans [operationDao,operationService,courseDao,courseService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,propertyConfigurer,dataSource,sessionFactory,transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
[DEBUG][2017-06-16 16:21:40,660][org.hibernate.type.BasicTypeRegistry]Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,660][org.hibernate.type.BasicTypeRegistry]Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,661][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,661][org.hibernate.type.BasicTypeRegistry]Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a307a8c
[DEBUG][2017-06-16 16:21:40,661][org.hibernate.type.BasicTypeRegistry]Adding type registration true_false -> org.hibernate.type.TrueFalseType@389c4eb1
[DEBUG][2017-06-16 16:21:40,661][org.hibernate.type.BasicTypeRegistry]Adding type registration yes_no -> org.hibernate.type.YesNoType@4b34fff9
[DEBUG][2017-06-16 16:21:40,661][org.hibernate.type.BasicTypeRegistry]Adding type registration byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,661][org.hibernate.type.BasicTypeRegistry]Adding type registration byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,664][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,664][org.hibernate.type.BasicTypeRegistry]Adding type registration character -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,664][org.hibernate.type.BasicTypeRegistry]Adding type registration char -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,664][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,664][org.hibernate.type.BasicTypeRegistry]Adding type registration short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,665][org.hibernate.type.BasicTypeRegistry]Adding type registration short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,665][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,665][org.hibernate.type.BasicTypeRegistry]Adding type registration integer -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,665][org.hibernate.type.BasicTypeRegistry]Adding type registration int -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,666][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,666][org.hibernate.type.BasicTypeRegistry]Adding type registration long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,666][org.hibernate.type.BasicTypeRegistry]Adding type registration long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,666][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,666][org.hibernate.type.BasicTypeRegistry]Adding type registration float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,667][org.hibernate.type.BasicTypeRegistry]Adding type registration float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,667][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,667][org.hibernate.type.BasicTypeRegistry]Adding type registration double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,667][org.hibernate.type.BasicTypeRegistry]Adding type registration double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,667][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,668][org.hibernate.type.BasicTypeRegistry]Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27adc16e
[DEBUG][2017-06-16 16:21:40,668][org.hibernate.type.BasicTypeRegistry]Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27adc16e
[DEBUG][2017-06-16 16:21:40,668][org.hibernate.type.BasicTypeRegistry]Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4066c471
[DEBUG][2017-06-16 16:21:40,668][org.hibernate.type.BasicTypeRegistry]Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4066c471
[DEBUG][2017-06-16 16:21:40,668][org.hibernate.type.BasicTypeRegistry]Adding type registration string -> org.hibernate.type.StringType@7d3d101b
[DEBUG][2017-06-16 16:21:40,669][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.String -> org.hibernate.type.StringType@7d3d101b
[DEBUG][2017-06-16 16:21:40,669][org.hibernate.type.BasicTypeRegistry]Adding type registration url -> org.hibernate.type.UrlType@1f75a668
[DEBUG][2017-06-16 16:21:40,669][org.hibernate.type.BasicTypeRegistry]Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f75a668
[DEBUG][2017-06-16 16:21:40,670][org.hibernate.type.BasicTypeRegistry]Adding type registration date -> org.hibernate.type.DateType@27d5a580
[DEBUG][2017-06-16 16:21:40,670][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Date -> org.hibernate.type.DateType@27d5a580
[DEBUG][2017-06-16 16:21:40,671][org.hibernate.type.BasicTypeRegistry]Adding type registration time -> org.hibernate.type.TimeType@19e7a160
[DEBUG][2017-06-16 16:21:40,671][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19e7a160
[DEBUG][2017-06-16 16:21:40,671][org.hibernate.type.BasicTypeRegistry]Adding type registration timestamp -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,671][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,671][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,671][org.hibernate.type.BasicTypeRegistry]Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e6f3f28
[DEBUG][2017-06-16 16:21:40,672][org.hibernate.type.BasicTypeRegistry]Adding type registration calendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,672][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,672][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,673][org.hibernate.type.BasicTypeRegistry]Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eaf3684
[DEBUG][2017-06-16 16:21:40,673][org.hibernate.type.BasicTypeRegistry]Adding type registration locale -> org.hibernate.type.LocaleType@39d9314d
[DEBUG][2017-06-16 16:21:40,678][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39d9314d
[DEBUG][2017-06-16 16:21:40,678][org.hibernate.type.BasicTypeRegistry]Adding type registration currency -> org.hibernate.type.CurrencyType@1bae316d
[DEBUG][2017-06-16 16:21:40,678][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1bae316d
[DEBUG][2017-06-16 16:21:40,679][org.hibernate.type.BasicTypeRegistry]Adding type registration timezone -> org.hibernate.type.TimeZoneType@5026735c
[DEBUG][2017-06-16 16:21:40,679][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5026735c
[DEBUG][2017-06-16 16:21:40,679][org.hibernate.type.BasicTypeRegistry]Adding type registration class -> org.hibernate.type.ClassType@50dfbc58
[DEBUG][2017-06-16 16:21:40,679][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50dfbc58
[DEBUG][2017-06-16 16:21:40,680][org.hibernate.type.BasicTypeRegistry]Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e36d14
[DEBUG][2017-06-16 16:21:40,680][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e36d14
[DEBUG][2017-06-16 16:21:40,680][org.hibernate.type.BasicTypeRegistry]Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302f7971
[DEBUG][2017-06-16 16:21:40,680][org.hibernate.type.BasicTypeRegistry]Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3370f42
[DEBUG][2017-06-16 16:21:40,680][org.hibernate.type.BasicTypeRegistry]Adding type registration binary -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration byte[] -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration [B -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration image -> org.hibernate.type.ImageType@176b75f7
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration characters -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,681][org.hibernate.type.BasicTypeRegistry]Adding type registration char[] -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,682][org.hibernate.type.BasicTypeRegistry]Adding type registration [C -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,682][org.hibernate.type.BasicTypeRegistry]Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,682][org.hibernate.type.BasicTypeRegistry]Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,682][org.hibernate.type.BasicTypeRegistry]Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,682][org.hibernate.type.BasicTypeRegistry]Adding type registration text -> org.hibernate.type.TextType@7fcf2fc1
[DEBUG][2017-06-16 16:21:40,682][org.hibernate.type.BasicTypeRegistry]Adding type registration blob -> org.hibernate.type.BlobType@609db546
[DEBUG][2017-06-16 16:21:40,682][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@609db546
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@301eda63
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration clob -> org.hibernate.type.ClobType@3af0a9da
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3af0a9da
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8e50104
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration serializable -> org.hibernate.type.SerializableType@45a37759
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration object -> org.hibernate.type.ObjectType@60410cd
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60410cd
[DEBUG][2017-06-16 16:21:40,683][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62727399
[DEBUG][2017-06-16 16:21:40,684][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d9ac0b4
[DEBUG][2017-06-16 16:21:40,684][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@130dca52
[DEBUG][2017-06-16 16:21:40,684][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2654635
[DEBUG][2017-06-16 16:21:40,684][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@737a135b
[DEBUG][2017-06-16 16:21:40,684][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@687ef2e0
[DEBUG][2017-06-16 16:21:40,685][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15dcfae7
[DEBUG][2017-06-16 16:21:40,685][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3da05287
[INFO][2017-06-16 16:21:40,686][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Administrator.hbm.xml
[INFO][2017-06-16 16:21:40,699][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\AgenceList.hbm.xml
[INFO][2017-06-16 16:21:40,712][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\ClaimStatus.hbm.xml
[INFO][2017-06-16 16:21:40,727][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Client.hbm.xml
[INFO][2017-06-16 16:21:40,750][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Course.hbm.xml
[INFO][2017-06-16 16:21:40,752][org.springframework.beans.factory.support.DefaultListableBeanFactory]Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ff4357f: defining beans [operationDao,operationService,courseDao,courseService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,propertyConfigurer,dataSource,sessionFactory,transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
[INFO][2017-06-16 16:21:40,757][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@39fcbef6: startup date [Fri Jun 16 16:21:40 CST 2017]; root of context hierarchy
[INFO][2017-06-16 16:21:40,758][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring.xml]
[INFO][2017-06-16 16:21:40,800][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring-hibernate.xml]
[INFO][2017-06-16 16:21:40,839][com.web.soulyogaadmin.util.EncryptablePropertyPlaceholderConfigurer]Loading properties file from class path resource [config.properties]
[INFO][2017-06-16 16:21:40,864][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@604f2bd2: defining beans [operationDao,operationService,courseDao,courseService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,propertyConfigurer,dataSource,sessionFactory,transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
[DEBUG][2017-06-16 16:21:40,930][org.hibernate.type.BasicTypeRegistry]Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,931][org.hibernate.type.BasicTypeRegistry]Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,931][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@404bbcbd
[DEBUG][2017-06-16 16:21:40,931][org.hibernate.type.BasicTypeRegistry]Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a307a8c
[DEBUG][2017-06-16 16:21:40,931][org.hibernate.type.BasicTypeRegistry]Adding type registration true_false -> org.hibernate.type.TrueFalseType@389c4eb1
[DEBUG][2017-06-16 16:21:40,932][org.hibernate.type.BasicTypeRegistry]Adding type registration yes_no -> org.hibernate.type.YesNoType@4b34fff9
[DEBUG][2017-06-16 16:21:40,933][org.hibernate.type.BasicTypeRegistry]Adding type registration byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,933][org.hibernate.type.BasicTypeRegistry]Adding type registration byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,933][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d7fc27
[DEBUG][2017-06-16 16:21:40,933][org.hibernate.type.BasicTypeRegistry]Adding type registration character -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,933][org.hibernate.type.BasicTypeRegistry]Adding type registration char -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,934][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f74980d
[DEBUG][2017-06-16 16:21:40,934][org.hibernate.type.BasicTypeRegistry]Adding type registration short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,938][org.hibernate.type.BasicTypeRegistry]Adding type registration short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,938][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68f1b17f
[DEBUG][2017-06-16 16:21:40,938][org.hibernate.type.BasicTypeRegistry]Adding type registration integer -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,938][org.hibernate.type.BasicTypeRegistry]Adding type registration int -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,939][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@398dada8
[DEBUG][2017-06-16 16:21:40,939][org.hibernate.type.BasicTypeRegistry]Adding type registration long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,939][org.hibernate.type.BasicTypeRegistry]Adding type registration long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,939][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Long -> org.hibernate.type.LongType@2049a9c1
[DEBUG][2017-06-16 16:21:40,939][org.hibernate.type.BasicTypeRegistry]Adding type registration float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,940][org.hibernate.type.BasicTypeRegistry]Adding type registration float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,940][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fa34d52
[DEBUG][2017-06-16 16:21:40,940][org.hibernate.type.BasicTypeRegistry]Adding type registration double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,941][org.hibernate.type.BasicTypeRegistry]Adding type registration double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,941][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6337c201
[DEBUG][2017-06-16 16:21:40,941][org.hibernate.type.BasicTypeRegistry]Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27adc16e
[DEBUG][2017-06-16 16:21:40,941][org.hibernate.type.BasicTypeRegistry]Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27adc16e
[DEBUG][2017-06-16 16:21:40,941][org.hibernate.type.BasicTypeRegistry]Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4066c471
[DEBUG][2017-06-16 16:21:40,942][org.hibernate.type.BasicTypeRegistry]Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4066c471
[DEBUG][2017-06-16 16:21:40,942][org.hibernate.type.BasicTypeRegistry]Adding type registration string -> org.hibernate.type.StringType@7d3d101b
[DEBUG][2017-06-16 16:21:40,942][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.String -> org.hibernate.type.StringType@7d3d101b
[DEBUG][2017-06-16 16:21:40,942][org.hibernate.type.BasicTypeRegistry]Adding type registration url -> org.hibernate.type.UrlType@1f75a668
[DEBUG][2017-06-16 16:21:40,948][org.hibernate.type.BasicTypeRegistry]Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f75a668
[DEBUG][2017-06-16 16:21:40,948][org.hibernate.type.BasicTypeRegistry]Adding type registration date -> org.hibernate.type.DateType@27d5a580
[DEBUG][2017-06-16 16:21:40,948][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Date -> org.hibernate.type.DateType@27d5a580
[DEBUG][2017-06-16 16:21:40,948][org.hibernate.type.BasicTypeRegistry]Adding type registration time -> org.hibernate.type.TimeType@19e7a160
[DEBUG][2017-06-16 16:21:40,949][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19e7a160
[DEBUG][2017-06-16 16:21:40,949][org.hibernate.type.BasicTypeRegistry]Adding type registration timestamp -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,949][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,949][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f99f5e0
[DEBUG][2017-06-16 16:21:40,949][org.hibernate.type.BasicTypeRegistry]Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e6f3f28
[DEBUG][2017-06-16 16:21:40,950][org.hibernate.type.BasicTypeRegistry]Adding type registration calendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,950][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,950][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5717c37
[DEBUG][2017-06-16 16:21:40,950][org.hibernate.type.BasicTypeRegistry]Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eaf3684
[DEBUG][2017-06-16 16:21:40,951][org.hibernate.type.BasicTypeRegistry]Adding type registration locale -> org.hibernate.type.LocaleType@39d9314d
[DEBUG][2017-06-16 16:21:40,951][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39d9314d
[DEBUG][2017-06-16 16:21:40,951][org.hibernate.type.BasicTypeRegistry]Adding type registration currency -> org.hibernate.type.CurrencyType@1bae316d
[DEBUG][2017-06-16 16:21:40,951][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1bae316d
[DEBUG][2017-06-16 16:21:40,951][org.hibernate.type.BasicTypeRegistry]Adding type registration timezone -> org.hibernate.type.TimeZoneType@5026735c
[DEBUG][2017-06-16 16:21:40,952][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5026735c
[DEBUG][2017-06-16 16:21:40,952][org.hibernate.type.BasicTypeRegistry]Adding type registration class -> org.hibernate.type.ClassType@50dfbc58
[DEBUG][2017-06-16 16:21:40,952][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50dfbc58
[DEBUG][2017-06-16 16:21:40,952][org.hibernate.type.BasicTypeRegistry]Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e36d14
[DEBUG][2017-06-16 16:21:40,952][org.hibernate.type.BasicTypeRegistry]Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e36d14
[DEBUG][2017-06-16 16:21:40,953][org.hibernate.type.BasicTypeRegistry]Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302f7971
[DEBUG][2017-06-16 16:21:40,953][org.hibernate.type.BasicTypeRegistry]Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3370f42
[DEBUG][2017-06-16 16:21:40,953][org.hibernate.type.BasicTypeRegistry]Adding type registration binary -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,953][org.hibernate.type.BasicTypeRegistry]Adding type registration byte[] -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,953][org.hibernate.type.BasicTypeRegistry]Adding type registration [B -> org.hibernate.type.BinaryType@352c1b98
[DEBUG][2017-06-16 16:21:40,954][org.hibernate.type.BasicTypeRegistry]Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,954][org.hibernate.type.BasicTypeRegistry]Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,954][org.hibernate.type.BasicTypeRegistry]Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48d61b48
[DEBUG][2017-06-16 16:21:40,954][org.hibernate.type.BasicTypeRegistry]Adding type registration image -> org.hibernate.type.ImageType@176b75f7
[DEBUG][2017-06-16 16:21:40,954][org.hibernate.type.BasicTypeRegistry]Adding type registration characters -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,954][org.hibernate.type.BasicTypeRegistry]Adding type registration char[] -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,955][org.hibernate.type.BasicTypeRegistry]Adding type registration [C -> org.hibernate.type.CharArrayType@3b8f0a79
[DEBUG][2017-06-16 16:21:40,955][org.hibernate.type.BasicTypeRegistry]Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,955][org.hibernate.type.BasicTypeRegistry]Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,955][org.hibernate.type.BasicTypeRegistry]Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b8b43c7
[DEBUG][2017-06-16 16:21:40,956][org.hibernate.type.BasicTypeRegistry]Adding type registration text -> org.hibernate.type.TextType@7fcf2fc1
[DEBUG][2017-06-16 16:21:40,956][org.hibernate.type.BasicTypeRegistry]Adding type registration blob -> org.hibernate.type.BlobType@609db546
[DEBUG][2017-06-16 16:21:40,956][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@609db546
[DEBUG][2017-06-16 16:21:40,956][org.hibernate.type.BasicTypeRegistry]Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@301eda63
[DEBUG][2017-06-16 16:21:40,956][org.hibernate.type.BasicTypeRegistry]Adding type registration clob -> org.hibernate.type.ClobType@3af0a9da
[DEBUG][2017-06-16 16:21:40,956][org.hibernate.type.BasicTypeRegistry]Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3af0a9da
[DEBUG][2017-06-16 16:21:40,957][org.hibernate.type.BasicTypeRegistry]Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8e50104
[DEBUG][2017-06-16 16:21:40,957][org.hibernate.type.BasicTypeRegistry]Adding type registration serializable -> org.hibernate.type.SerializableType@45a37759
[DEBUG][2017-06-16 16:21:40,957][org.hibernate.type.BasicTypeRegistry]Adding type registration object -> org.hibernate.type.ObjectType@60410cd
[DEBUG][2017-06-16 16:21:40,957][org.hibernate.type.BasicTypeRegistry]Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60410cd
[DEBUG][2017-06-16 16:21:40,957][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@305a0c5f
[DEBUG][2017-06-16 16:21:40,957][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4535b6d5
[DEBUG][2017-06-16 16:21:40,957][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ecee32c
[DEBUG][2017-06-16 16:21:40,958][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4372b9b6
[DEBUG][2017-06-16 16:21:40,958][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@232a7d73
[DEBUG][2017-06-16 16:21:40,958][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b41e4dd
[DEBUG][2017-06-16 16:21:40,958][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22ffa91a
[DEBUG][2017-06-16 16:21:40,958][org.hibernate.type.BasicTypeRegistry]Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74960bfa
[INFO][2017-06-16 16:21:40,959][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Administrator.hbm.xml
[INFO][2017-06-16 16:21:40,982][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\AgenceList.hbm.xml
[INFO][2017-06-16 16:21:41,022][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\ClaimStatus.hbm.xml
[INFO][2017-06-16 16:21:41,045][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Client.hbm.xml
[INFO][2017-06-16 16:21:41,079][org.hibernate.cfg.Configuration]HHH000220: Reading mappings from file: D:\DevWork\YogaSpace\postSaleAdministrator\target\classes\hbm\Course.hbm.xml
[INFO][2017-06-16 16:21:41,097][org.springframework.beans.factory.support.DefaultListableBeanFactory]Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@604f2bd2: defining beans [operationDao,operationService,courseDao,courseService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,propertyConfigurer,dataSource,sessionFactory,transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
